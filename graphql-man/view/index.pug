extend layout.pug

block content
  span#data(style="display: none", data-data=data ? `${JSON.stringify(data)}` : "" data-type=type ? `${JSON.stringify(type)}` : "")
  div.container
    div.main
      //- 接口列表
      div.field-list
        //- 定义api列表的 mixin
        mixin fields(name, list)
          div.fields
            h2.title
              |#{name.slice(0, 1).toLocaleUpperCase() + name.slice(1)}
            each item, index in list.fields
              div.field-item
                a(href=`/api/${name}/${item.name}`) #{item.name}
                div.description #{item.descriptions}

        //- 定义api的 mixin
        mixin api(name, list, collapse)
          div.fields
            div.title(class=collapse ? "trigger" : "" onclick="openCollapse(event)")
              |#{name}
            div.description #{list.descriptions}

            section(class=collapse ? "collapse" : "")
              if list.args.length
                h3.sub-title Args
                each item, index in list.args
                  div.field-item
                    div
                      |#{item.name}
                      span.type &lt;#{item.type}&gt;
                    div.description #{item.description}

              if list.resolve.fields.length
                h3.sub-title Resolves
                each item, index in list.resolve.fields
                  div.field-item
                    if item.resolve
                      +api(item.name, item, true)
                    else
                      div
                        |#{item.name}
                      div.description #{item.descriptions}


        case type
          when 'query'
            if data
              +api(name, data)
          when 'mutation'
            if data
              +api(name, data)
          default
            if query
              +fields('query', query)
            if mutation
              +fields('mutation', mutation)

      //- 内容区
      div.content
        div.edit-content.js(contenteditable="true")
        pre.display-content
        div.fetch-btn(role="button" onclick="fetch()")

block script
  script
    include parse.js
  script.
    var data_elem = document.getElementById('data')
    var editContent = document.querySelector('.edit-content')
    var displayContent = document.querySelector('.display-content')
    var data = data_elem.getAttribute('data-data')
    var type = data_elem.getAttribute('data-type')

    loadEditContent(data, type)

    function loadEditContent (data, type) {
      if (!data) {
        return false
      }

      data = JSON.parse(data)
      type = JSON.parse(type)

      data_elem.parentElement.removeChild(data_elem)
      editContent.innerHTML = parseGraphqlObject(data, type)
      hljs.highlightBlock(editContent)
    }

    function openCollapse (e) {
      let target = e.target
      if (target.classList.contains('trigger')) {
        e.target.parentElement.querySelector('.collapse').classList.toggle('open')
      }
    }

    function fetch () {
      axios.post('/graphql', editContent.textContent, {
        headers: { 'Content-Type': 'application/graphql' }
      })
      .then((res) => {
        let data = res.data.errors ? res.data.errors : res.data.data
        displayContent.innerHTML = JSON.stringify(data, null, 4)
        hljs.highlightBlock(displayContent)
      })
      .catch((err) => {
        displayContent.innerHTML = JSON.stringify(err.response.data.errors, null, 4)
        hljs.highlightBlock(displayContent)
      })
    }

block style
  style.
    .container { flex: 1; display: flex; }
    .main { display: flex; width: 100%; }

    .field-list { width: 300px; padding: 10px 20px; background-color: #fff; border-right: 1px solid #ddd; overflow-y: auto; flex-shrink: 0; }
    .field-list .fields { }
    .field-list .trigger { color: #488fff; text-decoration: underline; cursor: pointer; }
    .field-list section { padding-left: 20px; }
    .field-list section.collapse { display: none; }
    .field-list section.collapse.open { display: block; }
    .field-list .title { font-size: 18px; font-weight: 500; }
    .field-list .description { font-size: 13px; color: #666; }
    .field-list .type { font-size: 13px; color: #487dff; margin-left: 5px; }
    .field-list .sub-title { margin-top: 10px; font-size: 18px; }

    .field-item { padding: 5px 0 5px 10px; margin-bottom: 2px; border-bottom: 1px solid #ccc; }
    .field-item .description { font-size: 12px; color: #999; }

    .content { position: relative; flex: 1; display: flex; flex-direction: column; background-color: #fefefe; overflow-x: auto; }
    .edit-content, .display-content { flex: 1; padding: 15px; height: 100%; overflow: auto; white-space: pre; }
    .edit-content { font-size: 14px; border: none; white-space: pre; background-color: #fff; }
    .edit-content:focus { box-shadow: none; outline: none; }
    .display-content { background-color: #f3f3f3; }

    .fetch-btn { position: absolute; z-index: 999; left: 50%; top: 50%; transform: translate(-50%, -50%); width: 60px; height: 60px; border-radius: 50%; background: #666; box-shadow: 0 0 5px 1px rgba(0, 0, 0, .36); transition: all .3s; }
    .fetch-btn:active { box-shadow: 0 0 5px 1px rgba(0, 0, 0, .1); }
    .fetch-btn::after { content: ''; display: block; width: 0; height: 0; border-left: 24px solid #fff; border-top: 16px solid transparent; border-bottom: 16px solid transparent; border-right: 0px solid transparent; position: absolute; left: 50%; top: 50%; transform: translate(-50%, -50%); margin-left: 4px; }
